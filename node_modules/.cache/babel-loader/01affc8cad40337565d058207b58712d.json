{"ast":null,"code":"var _jsxFileName = \"/Users/dipinti/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 139,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/dipinti/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","winner","calculateWinner","state","status","xIsNext","Game","constructor","history","Array","fill","stepNumber","handleClick","slice","current","length","setState","concat","jumpTo","step","moves","map","move","desc","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n    className=\"square\"\n    onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}        onClick={() => this.props.onClick(i)}      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n  history: [{\n  squares: Array(9).fill(null),\n  }],\n  stepNumber: 0,\n  xIsNext: true,\n  };\n  }\n\nhandleClick(i) {\n    const history = this.state.history.slice(0,\n    this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n      squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n    jumpTo(step) {\n    this.setState({\n    stepNumber: step,\n    xIsNext: (step % 2) === 0,\n    });\n    }\n\n  render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) =>\n      {\n      const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n      return (\n      <li key={move}>\n      <button onClick={() =>\n      this.jumpTo(move)}>{desc}</button>\n              </li>\n            );\n          });\n\n      let status;\n      if (winner) {\n      status = 'Winner: ' + winner;\n      } else {\n      status = 'Next player: ' +\n      (this.state.xIsNext ? 'X' : 'O');\n      }\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n            squares={current.squares}\n            onClick={(i) =>\n            this.handleClick(i)}\n             />\n             </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n    }\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] ===\n    squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}